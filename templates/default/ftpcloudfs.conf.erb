# ftpcloudfs configuration file generated by chef

[ftpcloudfs]

# FTP banner (%v version, %f ftp handler version)
# banner = ftp-cloudfs %v using pyftpdlib %f ready.

# Port to bind.
port = <%= @port %>

# Address to bind.
bind-address = <%= @bind_address %>

# Authentication URL (required)
auth-url = <%= @auth_url %>

# DEPRECATED: Number of workers to use (no effect)
# workers = (empty)

# Memcache server(s) for external cache (eg 127.0.0.1:11211)
# Can be a comma-separated list.
<% if node['ftp-cloudfs']['memcached']%>
memcache = <%= @memcache %>
<% end %>

# Maximum number of client connections per IP
# default is 0 (no limit)
max-cons-per-ip = <%= @max_cons_per_ip %>

# Large file support.
# Specify a size in MB to split large files.
<% unless @split_large_files.empty? %>
split-large-files = <%= @split_large_files %>
<% end %>

# Hide .part directory from large files
hide-part-dir = <%= @hide_part_dir %>

# Be verbose on logging.
verbose = <%= @verbose %>

# Enable logging to the system logger.
syslog = <%= @syslog %>

# Log file location.
<% unless node['ftp-cloudfs']['log-dir'].nil? %>
log-file = <%= @logfile %>
<% end %>

# Pid file location when in daemon mode.
<% unless node['ftp-cloudfs']['pid-dir'].nil? %>
pid-file = <%= @pidfile %>
<% end %>

# UID to drop privileges when in daemon mode.
# uid = (empty)
<% unless node['ftp-cloudfs']['uid'].nil? %>
uid = <%=  node['ftp-cloudfs']['uid'] %>
<% end %>

# GID to drop priviliges when in daemon mode.
# gid = (empty)
<% unless node['ftp-cloudfs']['gid'].nil? %>
gid = <%= node['ftp-cloudfs']['gid'] %>
<% end %>

# Masquerade IP address in case your server is behind a firewall or NATed.
# masquerade-firewall = (empty)

# Passive ports to be used for data transfers. Expected to be a port range
# (endpoints included) in integer:integer format (eg. 60000:65535).
# By default the operating system will assign a port.
# passive-ports = (empty)

# Auth 2.0 (Keystone), requires keystoneclient
# keystone-auth = no
<% if node['ftp-cloudfs']['keystone-auth']%>
keystone-auth = yes
<% end %>

# Region name to be used with Auth 2.0 (optional)
<% if node['ftp-cloudfs']['keystone-auth']%>
keystone-region-name = <%= @keystone_region_name %>
<% end %>

# Tenant separator to be used with Auth 2.0 (eg. TENANT.USERNAME)
<% if node['ftp-cloudfs']['keystone-auth']%>
keystone-tenant-separator = <%= @keystone_tenant_separator %>
<% end %>

# Service type to be used with Auth 2.0.
<% if node['ftp-cloudfs']['keystone-auth']%>
keystone-service-type = <%= @keystone_service_type %>
<% end %>

# Endpoint type to be used with Auth 2.0.
<% if node['ftp-cloudfs']['keystone-auth']%>
keystone-endpoint-type = <%= @keystone_endpoint_type %>
<% end %>

# Use Rackspace's ServiceNet internal network.
# rackspace-service-net = no
<% if node['ftp-cloudfs']['rackspace_service_net'] %>
rackspace-service-net = yes
<% end %>

# EOF